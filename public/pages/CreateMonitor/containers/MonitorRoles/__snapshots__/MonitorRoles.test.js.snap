// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MonitorRoles renders 1`] = `
<Formik
  initialValues={
    Object {
      "aggregationType": "count",
      "aggregations": Array [],
      "associatedMonitors": Object {
        "sequence": Object {
          "delegates": Array [],
        },
      },
      "associatedMonitorsEditor": "",
      "associatedMonitorsList": Array [],
      "bucketUnitOfTime": "h",
      "bucketValue": 1,
      "clusterNames": Array [],
      "cronExpression": "0 */1 * * *",
      "daily": 0,
      "description": "",
      "detectorId": "",
      "disabled": false,
      "fieldName": Array [],
      "filters": Array [],
      "frequency": "interval",
      "groupBy": Array [],
      "groupByField": Array [
        Object {
          "label": "",
        },
      ],
      "groupedOverFieldName": "bytes",
      "groupedOverTop": 5,
      "index": Array [],
      "monitor_type": "query_level_monitor",
      "monthly": Object {
        "day": 1,
        "type": "day",
      },
      "name": "",
      "overDocuments": "all documents",
      "period": Object {
        "interval": 1,
        "unit": "MINUTES",
      },
      "preventVisualEditor": false,
      "queries": Array [],
      "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
      "roles": Array [],
      "searchType": "graph",
      "timeField": "",
      "timezone": Array [],
      "uri": Object {
        "api_type": "",
        "clusters": Array [],
        "path": "",
        "path_params": "",
        "url": "",
      },
      "weekly": Object {
        "fri": false,
        "mon": false,
        "sat": false,
        "sun": false,
        "thur": false,
        "tue": false,
        "wed": false,
      },
    }
  }
>
  <MonitorRoles
    httpClient={[MockFunction]}
  >
    <FormikComboBox
      formRow={true}
      inputProps={
        Object {
          "async": true,
          "data-test-subj": "rolesComboBox",
          "isClearable": true,
          "isLoading": true,
          "onBlur": [Function],
          "onChange": [Function],
          "onSearchChange": [Function],
          "options": Array [
            Object {
              "label": "Backend roles",
              "options": Array [],
            },
          ],
          "placeholder": "Select backend roles",
          "singleSelection": false,
        }
      }
      name="roles"
      rowProps={
        Object {
          "helpText": "You can optionally assign one or more backend roles to the monitor (assigned roles have an effect only when filter_by_backend_roles is enabled)",
          "label": "Backend roles",
          "style": Object {
            "paddingLeft": "10px",
          },
        }
      }
    >
      <FormikInputWrapper
        fieldProps={Object {}}
        name="roles"
        render={[Function]}
      >
        <Field
          name="roles"
        >
          <FormikFormRow
            form={
              Object {
                "dirty": false,
                "errors": Object {},
                "getFieldHelpers": [Function],
                "getFieldMeta": [Function],
                "getFieldProps": [Function],
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialErrors": Object {},
                "initialStatus": undefined,
                "initialTouched": Object {},
                "initialValues": Object {
                  "aggregationType": "count",
                  "aggregations": Array [],
                  "associatedMonitors": Object {
                    "sequence": Object {
                      "delegates": Array [],
                    },
                  },
                  "associatedMonitorsEditor": "",
                  "associatedMonitorsList": Array [],
                  "bucketUnitOfTime": "h",
                  "bucketValue": 1,
                  "clusterNames": Array [],
                  "cronExpression": "0 */1 * * *",
                  "daily": 0,
                  "description": "",
                  "detectorId": "",
                  "disabled": false,
                  "fieldName": Array [],
                  "filters": Array [],
                  "frequency": "interval",
                  "groupBy": Array [],
                  "groupByField": Array [
                    Object {
                      "label": "",
                    },
                  ],
                  "groupedOverFieldName": "bytes",
                  "groupedOverTop": 5,
                  "index": Array [],
                  "monitor_type": "query_level_monitor",
                  "monthly": Object {
                    "day": 1,
                    "type": "day",
                  },
                  "name": "",
                  "overDocuments": "all documents",
                  "period": Object {
                    "interval": 1,
                    "unit": "MINUTES",
                  },
                  "preventVisualEditor": false,
                  "queries": Array [],
                  "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                  "roles": Array [],
                  "searchType": "graph",
                  "timeField": "",
                  "timezone": Array [],
                  "uri": Object {
                    "api_type": "",
                    "clusters": Array [],
                    "path": "",
                    "path_params": "",
                    "url": "",
                  },
                  "weekly": Object {
                    "fri": false,
                    "mon": false,
                    "sat": false,
                    "sun": false,
                    "thur": false,
                    "tue": false,
                    "wed": false,
                  },
                },
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validateOnMount": false,
                "values": Object {
                  "aggregationType": "count",
                  "aggregations": Array [],
                  "associatedMonitors": Object {
                    "sequence": Object {
                      "delegates": Array [],
                    },
                  },
                  "associatedMonitorsEditor": "",
                  "associatedMonitorsList": Array [],
                  "bucketUnitOfTime": "h",
                  "bucketValue": 1,
                  "clusterNames": Array [],
                  "cronExpression": "0 */1 * * *",
                  "daily": 0,
                  "description": "",
                  "detectorId": "",
                  "disabled": false,
                  "fieldName": Array [],
                  "filters": Array [],
                  "frequency": "interval",
                  "groupBy": Array [],
                  "groupByField": Array [
                    Object {
                      "label": "",
                    },
                  ],
                  "groupedOverFieldName": "bytes",
                  "groupedOverTop": 5,
                  "index": Array [],
                  "monitor_type": "query_level_monitor",
                  "monthly": Object {
                    "day": 1,
                    "type": "day",
                  },
                  "name": "",
                  "overDocuments": "all documents",
                  "period": Object {
                    "interval": 1,
                    "unit": "MINUTES",
                  },
                  "preventVisualEditor": false,
                  "queries": Array [],
                  "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                  "roles": Array [],
                  "searchType": "graph",
                  "timeField": "",
                  "timezone": Array [],
                  "uri": Object {
                    "api_type": "",
                    "clusters": Array [],
                    "path": "",
                    "path_params": "",
                    "url": "",
                  },
                  "weekly": Object {
                    "fri": false,
                    "mon": false,
                    "sat": false,
                    "sun": false,
                    "thur": false,
                    "tue": false,
                    "wed": false,
                  },
                },
              }
            }
            name="roles"
            rowProps={
              Object {
                "helpText": "You can optionally assign one or more backend roles to the monitor (assigned roles have an effect only when filter_by_backend_roles is enabled)",
                "label": "Backend roles",
                "style": Object {
                  "paddingLeft": "10px",
                },
              }
            }
          >
            <EuiFormRow
              describedByIds={Array []}
              display="row"
              fullWidth={false}
              hasChildLabel={true}
              hasEmptyLabelSpace={false}
              helpText="You can optionally assign one or more backend roles to the monitor (assigned roles have an effect only when filter_by_backend_roles is enabled)"
              id="roles-form-row"
              label="Backend roles"
              labelType="label"
              style={
                Object {
                  "paddingLeft": "10px",
                }
              }
            >
              <div
                className="euiFormRow"
                id="roles-form-row-row"
                style={
                  Object {
                    "paddingLeft": "10px",
                  }
                }
              >
                <div
                  className="euiFormRow__labelWrapper"
                >
                  <EuiFormLabel
                    className="euiFormRow__label"
                    htmlFor="roles-form-row"
                    isFocused={false}
                    type="label"
                  >
                    <label
                      className="euiFormLabel euiFormRow__label"
                      htmlFor="roles-form-row"
                    >
                      Backend roles
                    </label>
                  </EuiFormLabel>
                </div>
                <div
                  className="euiFormRow__fieldWrapper"
                >
                  <ComboBox
                    aria-describedby="roles-form-row-help-0"
                    field={
                      Object {
                        "name": "roles",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "value": Array [],
                      }
                    }
                    form={
                      Object {
                        "dirty": false,
                        "errors": Object {},
                        "getFieldHelpers": [Function],
                        "getFieldMeta": [Function],
                        "getFieldProps": [Function],
                        "handleBlur": [Function],
                        "handleChange": [Function],
                        "handleReset": [Function],
                        "handleSubmit": [Function],
                        "initialErrors": Object {},
                        "initialStatus": undefined,
                        "initialTouched": Object {},
                        "initialValues": Object {
                          "aggregationType": "count",
                          "aggregations": Array [],
                          "associatedMonitors": Object {
                            "sequence": Object {
                              "delegates": Array [],
                            },
                          },
                          "associatedMonitorsEditor": "",
                          "associatedMonitorsList": Array [],
                          "bucketUnitOfTime": "h",
                          "bucketValue": 1,
                          "clusterNames": Array [],
                          "cronExpression": "0 */1 * * *",
                          "daily": 0,
                          "description": "",
                          "detectorId": "",
                          "disabled": false,
                          "fieldName": Array [],
                          "filters": Array [],
                          "frequency": "interval",
                          "groupBy": Array [],
                          "groupByField": Array [
                            Object {
                              "label": "",
                            },
                          ],
                          "groupedOverFieldName": "bytes",
                          "groupedOverTop": 5,
                          "index": Array [],
                          "monitor_type": "query_level_monitor",
                          "monthly": Object {
                            "day": 1,
                            "type": "day",
                          },
                          "name": "",
                          "overDocuments": "all documents",
                          "period": Object {
                            "interval": 1,
                            "unit": "MINUTES",
                          },
                          "preventVisualEditor": false,
                          "queries": Array [],
                          "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                          "roles": Array [],
                          "searchType": "graph",
                          "timeField": "",
                          "timezone": Array [],
                          "uri": Object {
                            "api_type": "",
                            "clusters": Array [],
                            "path": "",
                            "path_params": "",
                            "url": "",
                          },
                          "weekly": Object {
                            "fri": false,
                            "mon": false,
                            "sat": false,
                            "sun": false,
                            "thur": false,
                            "tue": false,
                            "wed": false,
                          },
                        },
                        "isSubmitting": false,
                        "isValid": true,
                        "isValidating": false,
                        "registerField": [Function],
                        "resetForm": [Function],
                        "setErrors": [Function],
                        "setFieldError": [Function],
                        "setFieldTouched": [Function],
                        "setFieldValue": [Function],
                        "setFormikState": [Function],
                        "setStatus": [Function],
                        "setSubmitting": [Function],
                        "setTouched": [Function],
                        "setValues": [Function],
                        "status": undefined,
                        "submitCount": 0,
                        "submitForm": [Function],
                        "touched": Object {},
                        "unregisterField": [Function],
                        "validateField": [Function],
                        "validateForm": [Function],
                        "validateOnBlur": true,
                        "validateOnChange": true,
                        "validateOnMount": false,
                        "values": Object {
                          "aggregationType": "count",
                          "aggregations": Array [],
                          "associatedMonitors": Object {
                            "sequence": Object {
                              "delegates": Array [],
                            },
                          },
                          "associatedMonitorsEditor": "",
                          "associatedMonitorsList": Array [],
                          "bucketUnitOfTime": "h",
                          "bucketValue": 1,
                          "clusterNames": Array [],
                          "cronExpression": "0 */1 * * *",
                          "daily": 0,
                          "description": "",
                          "detectorId": "",
                          "disabled": false,
                          "fieldName": Array [],
                          "filters": Array [],
                          "frequency": "interval",
                          "groupBy": Array [],
                          "groupByField": Array [
                            Object {
                              "label": "",
                            },
                          ],
                          "groupedOverFieldName": "bytes",
                          "groupedOverTop": 5,
                          "index": Array [],
                          "monitor_type": "query_level_monitor",
                          "monthly": Object {
                            "day": 1,
                            "type": "day",
                          },
                          "name": "",
                          "overDocuments": "all documents",
                          "period": Object {
                            "interval": 1,
                            "unit": "MINUTES",
                          },
                          "preventVisualEditor": false,
                          "queries": Array [],
                          "query": "{
    \\"size\\": 0,
    \\"query\\": {
        \\"match_all\\": {}
    }
}",
                          "roles": Array [],
                          "searchType": "graph",
                          "timeField": "",
                          "timezone": Array [],
                          "uri": Object {
                            "api_type": "",
                            "clusters": Array [],
                            "path": "",
                            "path_params": "",
                            "url": "",
                          },
                          "weekly": Object {
                            "fri": false,
                            "mon": false,
                            "sat": false,
                            "sun": false,
                            "thur": false,
                            "tue": false,
                            "wed": false,
                          },
                        },
                      }
                    }
                    id="roles-form-row"
                    inputProps={
                      Object {
                        "async": true,
                        "data-test-subj": "rolesComboBox",
                        "isClearable": true,
                        "isLoading": true,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onSearchChange": [Function],
                        "options": Array [
                          Object {
                            "label": "Backend roles",
                            "options": Array [],
                          },
                        ],
                        "placeholder": "Select backend roles",
                        "singleSelection": false,
                      }
                    }
                    name="roles"
                    onBlur={[Function]}
                    onFocus={[Function]}
                  >
                    <EuiComboBox
                      async={true}
                      compressed={false}
                      data-test-subj="rolesComboBox"
                      fullWidth={false}
                      id="roles"
                      isClearable={true}
                      isLoading={true}
                      name="roles"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onSearchChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "Backend roles",
                            "options": Array [],
                          },
                        ]
                      }
                      placeholder="Select backend roles"
                      selectedOptions={Array []}
                      singleSelection={false}
                      sortMatchesBy="none"
                    >
                      <div
                        aria-expanded={false}
                        aria-haspopup="listbox"
                        className="euiComboBox"
                        data-test-subj="rolesComboBox"
                        name="roles"
                        onKeyDown={[Function]}
                        role="combobox"
                      >
                        <EuiComboBoxInput
                          autoSizeInputRef={[Function]}
                          compressed={false}
                          fullWidth={false}
                          hasSelectedOptions={false}
                          id="roles"
                          inputRef={[Function]}
                          isListOpen={false}
                          isLoading={true}
                          noIcon={false}
                          onChange={[Function]}
                          onClear={[Function]}
                          onClick={[Function]}
                          onCloseListClick={[Function]}
                          onFocus={[Function]}
                          onOpenListClick={[Function]}
                          onRemoveOption={[Function]}
                          placeholder="Select backend roles"
                          rootId={[Function]}
                          searchValue=""
                          selectedOptions={Array []}
                          singleSelection={false}
                          toggleButtonRef={[Function]}
                          updatePosition={[Function]}
                          value=""
                        >
                          <EuiFormControlLayout
                            compressed={false}
                            fullWidth={false}
                            icon={
                              Object {
                                "aria-label": "Open list of options",
                                "data-test-subj": "comboBoxToggleListButton",
                                "disabled": undefined,
                                "onClick": [Function],
                                "ref": [Function],
                                "side": "right",
                                "type": "arrowDown",
                              }
                            }
                            isLoading={true}
                          >
                            <div
                              className="euiFormControlLayout"
                            >
                              <div
                                className="euiFormControlLayout__childrenWrapper"
                              >
                                <div
                                  className="euiComboBox__inputWrap euiComboBox__inputWrap-isLoading euiComboBox__inputWrap-isClearable"
                                  data-test-subj="comboBoxInput"
                                  onClick={[Function]}
                                  tabIndex={-1}
                                >
                                  <p
                                    className="euiComboBoxPlaceholder"
                                  >
                                    Select backend roles
                                  </p>
                                  <AutosizeInput
                                    aria-controls=""
                                    className="euiComboBox__input"
                                    data-test-subj="comboBoxSearchInput"
                                    id="roles"
                                    injectStyles={true}
                                    inputRef={[Function]}
                                    minWidth={1}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    role="textbox"
                                    style={
                                      Object {
                                        "fontSize": 14,
                                      }
                                    }
                                    value=""
                                  >
                                    <div
                                      className="euiComboBox__input"
                                      style={
                                        Object {
                                          "display": "inline-block",
                                          "fontSize": 14,
                                        }
                                      }
                                    >
                                      <input
                                        aria-controls=""
                                        data-test-subj="comboBoxSearchInput"
                                        id="roles"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        role="textbox"
                                        style={
                                          Object {
                                            "boxSizing": "content-box",
                                            "width": "2px",
                                          }
                                        }
                                        value=""
                                      />
                                      <div
                                        style={
                                          Object {
                                            "height": 0,
                                            "left": 0,
                                            "overflow": "scroll",
                                            "position": "absolute",
                                            "top": 0,
                                            "visibility": "hidden",
                                            "whiteSpace": "pre",
                                          }
                                        }
                                      />
                                    </div>
                                  </AutosizeInput>
                                </div>
                                <EuiFormControlLayoutIcons
                                  compressed={false}
                                  icon={
                                    Object {
                                      "aria-label": "Open list of options",
                                      "data-test-subj": "comboBoxToggleListButton",
                                      "disabled": undefined,
                                      "onClick": [Function],
                                      "ref": [Function],
                                      "side": "right",
                                      "type": "arrowDown",
                                    }
                                  }
                                  isLoading={true}
                                >
                                  <div
                                    className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                  >
                                    <EuiLoadingSpinner
                                      size="m"
                                    >
                                      <span
                                        className="euiLoadingSpinner euiLoadingSpinner--medium"
                                      />
                                    </EuiLoadingSpinner>
                                    <EuiFormControlLayoutCustomIcon
                                      aria-label="Open list of options"
                                      data-test-subj="comboBoxToggleListButton"
                                      iconRef={[Function]}
                                      onClick={[Function]}
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <button
                                        aria-label="Open list of options"
                                        className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                        data-test-subj="comboBoxToggleListButton"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiIcon
                                          aria-hidden="true"
                                          className="euiFormControlLayoutCustomIcon__icon"
                                          size="m"
                                          type="arrowDown"
                                        >
                                          <div>
                                            EuiIconMock
                                          </div>
                                        </EuiIcon>
                                      </button>
                                    </EuiFormControlLayoutCustomIcon>
                                  </div>
                                </EuiFormControlLayoutIcons>
                              </div>
                            </div>
                          </EuiFormControlLayout>
                        </EuiComboBoxInput>
                      </div>
                    </EuiComboBox>
                  </ComboBox>
                  <EuiFormHelpText
                    className="euiFormRow__text"
                    id="roles-form-row-help-0"
                    key="You can optionally assign one or more backend roles to the monitor (assigned roles have an effect only when filter_by_backend_roles is enabled)"
                  >
                    <div
                      className="euiFormHelpText euiFormRow__text"
                      id="roles-form-row-help-0"
                    >
                      You can optionally assign one or more backend roles to the monitor (assigned roles have an effect only when filter_by_backend_roles is enabled)
                    </div>
                  </EuiFormHelpText>
                </div>
              </div>
            </EuiFormRow>
          </FormikFormRow>
        </Field>
      </FormikInputWrapper>
    </FormikComboBox>
  </MonitorRoles>
</Formik>
`;
