// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DestinationsList renders when Notification plugin is installed 1`] = `
<DestinationsList
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "from=0&search=&size=20&sortDirection=desc&sortField=name&type=ALL",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
>
  <NotificationsInfoCallOut
    hasNotificationPlugin={false}
  >
    <div>
      <EuiCallOut
        title="Destinations have become channels in Notifications."
      >
        <div
          className="euiCallOut euiCallOut--primary"
        >
          <div
            className="euiCallOutHeader"
          >
            <span
              className="euiCallOutHeader__title"
            >
              Destinations have become channels in Notifications.
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Your destinations have been migrated to Notifications, a new centralized place to manage your notification channels. Destinations will be deprecated going forward.
                    <EuiSpacer
                      size="l"
                    >
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="l"
      >
        <div
          className="euiSpacer euiSpacer--l"
        />
      </EuiSpacer>
    </div>
  </NotificationsInfoCallOut>
  <NotificationsCallOut>
    <div>
      <EuiCallOut
        color="danger"
        iconType="alert"
        title="Notifications plugin is not installed"
      >
        <div
          className="euiCallOut euiCallOut--danger"
        >
          <div
            className="euiCallOutHeader"
          >
            <EuiIcon
              aria-hidden="true"
              className="euiCallOutHeader__icon"
              color="inherit"
              size="m"
              type="alert"
            >
              <EuiIconEmpty
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiCallOutHeader__icon"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiCallOutHeader__icon"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                />
              </EuiIconEmpty>
            </EuiIcon>
            <span
              className="euiCallOutHeader__title"
            >
              Notifications plugin is not installed
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Install the notifications plugin in order to create and select channels to send out notifications.
                     
                    <EuiLink
                      external={true}
                      href="#"
                    >
                      <a
                        className="euiLink euiLink--primary"
                        href="#"
                        rel="noreferrer"
                      >
                        Learn more
                        <EuiIcon
                          aria-label="External link"
                          className="euiLink__externalIcon"
                          size="s"
                          type="popout"
                        >
                          <EuiIconEmpty
                            aria-hidden={true}
                            aria-label="External link"
                            className="euiIcon euiIcon--small euiIcon-isLoading euiLink__externalIcon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-hidden={true}
                              aria-label="External link"
                              className="euiIcon euiIcon--small euiIcon-isLoading euiLink__externalIcon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            />
                          </EuiIconEmpty>
                        </EuiIcon>
                      </a>
                    </EuiLink>
                    .
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="m"
      >
        <div
          className="euiSpacer euiSpacer--m"
        />
      </EuiSpacer>
    </div>
  </NotificationsCallOut>
  <ContentPanel
    actions={
      <DestinationsActions
        isEmailAllowed={true}
        onClickManageEmailGroups={[Function]}
        onClickManageSenders={[Function]}
      />
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Destinations (deprecated)"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Destinations (deprecated)
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem>
                      <div
                        className="euiFlexItem"
                      >
                        <DestinationsActions
                          isEmailAllowed={true}
                          onClickManageEmailGroups={[Function]}
                          onClickManageSenders={[Function]}
                        >
                          <EuiFlexGroup
                            alignItems="center"
                            justifyContent="spaceBetween"
                          >
                            <div
                              className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                            >
                              <EuiFlexItem>
                                <div
                                  className="euiFlexItem"
                                >
                                  <EuiPopover
                                    anchorPosition="downLeft"
                                    button={
                                      <EuiButton
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                      >
                                        Actions
                                      </EuiButton>
                                    }
                                    closePopover={[Function]}
                                    display="inlineBlock"
                                    hasArrow={true}
                                    id="destinationActionsPopover"
                                    isOpen={false}
                                    ownFocus={true}
                                    panelPaddingSize="none"
                                  >
                                    <div
                                      className="euiPopover euiPopover--anchorDownLeft"
                                      id="destinationActionsPopover"
                                    >
                                      <div
                                        className="euiPopover__anchor"
                                      >
                                        <EuiButton
                                          iconSide="right"
                                          iconType="arrowDown"
                                          onClick={[Function]}
                                        >
                                          <EuiButtonDisplay
                                            baseClassName="euiButton"
                                            disabled={false}
                                            element="button"
                                            iconSide="right"
                                            iconType="arrowDown"
                                            isDisabled={false}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <button
                                              className="euiButton euiButton--primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "minWidth": undefined,
                                                }
                                              }
                                              type="button"
                                            >
                                              <EuiButtonContent
                                                className="euiButton__content"
                                                iconSide="right"
                                                iconType="arrowDown"
                                                textProps={
                                                  Object {
                                                    "className": "euiButton__text",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="euiButtonContent euiButtonContent--iconRight euiButton__content"
                                                >
                                                  <EuiIcon
                                                    className="euiButtonContent__icon"
                                                    color="inherit"
                                                    size="m"
                                                    type="arrowDown"
                                                  >
                                                    <EuiIconArrowDown
                                                      aria-hidden={true}
                                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                                      focusable="false"
                                                      role="img"
                                                      style={null}
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon--inherit euiButtonContent__icon"
                                                        focusable="false"
                                                        height={16}
                                                        role="img"
                                                        style={null}
                                                        viewBox="0 0 16 16"
                                                        width={16}
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                          fillRule="non-zero"
                                                        />
                                                      </svg>
                                                    </EuiIconArrowDown>
                                                  </EuiIcon>
                                                  <span
                                                    className="euiButton__text"
                                                  >
                                                    Actions
                                                  </span>
                                                </span>
                                              </EuiButtonContent>
                                            </button>
                                          </EuiButtonDisplay>
                                        </EuiButton>
                                      </div>
                                    </div>
                                  </EuiPopover>
                                </div>
                              </EuiFlexItem>
                            </div>
                          </EuiFlexGroup>
                        </DestinationsActions>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DeleteConfirmation
            isVisible={false}
            onCancel={[Function]}
            onConfirm={[Function]}
          />
          <ManageSenders
            httpClient={[MockFunction]}
            isEmailAllowed={true}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <ManageEmailGroups
            httpClient={[MockFunction]}
            isEmailAllowed={true}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <DestinationsControls
            activePage={0}
            allowList={
              Array [
                "chime",
                "slack",
                "custom_webhook",
                "email",
              ]
            }
            onPageClick={[Function]}
            onSearchChange={[Function]}
            onTypeChange={[Function]}
            pageCount={1}
            search=""
            type="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All type",
                            "value": "ALL",
                          },
                          Object {
                            "text": "Amazon Chime",
                            "value": "chime",
                          },
                          Object {
                            "text": "Slack",
                            "value": "slack",
                          },
                          Object {
                            "text": "Custom webhook",
                            "value": "custom_webhook",
                          },
                          Object {
                            "text": "Email",
                            "value": "email",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All type
                                </option>
                                <option
                                  key="1"
                                  value="chime"
                                >
                                  Amazon Chime
                                </option>
                                <option
                                  key="2"
                                  value="slack"
                                >
                                  Slack
                                </option>
                                <option
                                  key="3"
                                  value="custom_webhook"
                                >
                                  Custom webhook
                                </option>
                                <option
                                  key="4"
                                  value="email"
                                >
                                  Email
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DestinationsControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "field": "name",
                  "name": "Destination name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "type",
                  "name": "Destination type",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "user",
                  "name": "Last updated by",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "actions": Array [
                    Object {
                      "description": "View this destination.",
                      "name": "View",
                      "onClick": [Function],
                    },
                  ],
                  "name": "Actions",
                  "width": "35px",
                },
              ]
            }
            hasActions={true}
            isSelectable={true}
            items={Array []}
            noItemsMessage={
              <EmptyDestinations
                isFilterApplied={false}
                onResetFilters={[Function]}
              />
            }
            onChange={[Function]}
            pagination={
              Object {
                "pageIndex": 0,
                "pageSize": 20,
                "pageSizeOptions": Array [
                  5,
                  10,
                  20,
                  50,
                ],
                "totalItemCount": 0,
              }
            }
            responsive={true}
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "name",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          />
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_name_0",
                                    "name": "Destination name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_type_1",
                                    "name": "Destination type",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_user_2",
                                    "name": "Last updated by",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_name_0"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_name_0"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_name_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination name"
                                        >
                                          Destination name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_type_1"
                            isSorted={false}
                            key="_data_h_type_1"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_type_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination type",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination type"
                                        >
                                          Destination type
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_user_2"
                            isSorted={false}
                            key="_data_h_user_2"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_user_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Last updated by",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Last updated by"
                                        >
                                          Last updated by
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="right"
                            key="_actions_h_3"
                            width="35px"
                          >
                            <th
                              className="euiTableHeaderCell"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "35px",
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent euiTableCellContent--alignRight"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent euiTableCellContent--alignRight"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Actions",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Actions"
                                      >
                                        Actions
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={4}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={4}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <EmptyDestinations
                                      isFilterApplied={false}
                                      onResetFilters={[Function]}
                                    >
                                      <EuiEmptyPrompt
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing destinations.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing destinations.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </EmptyDestinations>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</DestinationsList>
`;

exports[`DestinationsList renders when Notification plugin is not installed 1`] = `
<DestinationsList
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "from=0&search=&size=20&sortDirection=desc&sortField=name&type=ALL",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
>
  <NotificationsInfoCallOut
    hasNotificationPlugin={false}
  >
    <div>
      <EuiCallOut
        title="Destinations have become channels in Notifications."
      >
        <div
          className="euiCallOut euiCallOut--primary"
        >
          <div
            className="euiCallOutHeader"
          >
            <span
              className="euiCallOutHeader__title"
            >
              Destinations have become channels in Notifications.
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Your destinations have been migrated to Notifications, a new centralized place to manage your notification channels. Destinations will be deprecated going forward.
                    <EuiSpacer
                      size="l"
                    >
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="l"
      >
        <div
          className="euiSpacer euiSpacer--l"
        />
      </EuiSpacer>
    </div>
  </NotificationsInfoCallOut>
  <NotificationsCallOut>
    <div>
      <EuiCallOut
        color="danger"
        iconType="alert"
        title="Notifications plugin is not installed"
      >
        <div
          className="euiCallOut euiCallOut--danger"
        >
          <div
            className="euiCallOutHeader"
          >
            <EuiIcon
              aria-hidden="true"
              className="euiCallOutHeader__icon"
              color="inherit"
              size="m"
              type="alert"
            >
              <EuiIconAlert
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M7.59 10.059L7.35 5.18h1.3L8.4 10.06h-.81zm.394 1.901a.61.61 0 01-.448-.186.606.606 0 01-.186-.444c0-.174.062-.323.186-.446a.614.614 0 01.448-.184c.169 0 .315.06.44.182.124.122.186.27.186.448a.6.6 0 01-.189.446.607.607 0 01-.437.184zM2 14a1 1 0 01-.878-1.479l6-11a1 1 0 011.756 0l6 11A1 1 0 0114 14H2zm0-1h12L8 2 2 13z"
                    fillRule="evenodd"
                  />
                </svg>
              </EuiIconAlert>
            </EuiIcon>
            <span
              className="euiCallOutHeader__title"
            >
              Notifications plugin is not installed
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Install the notifications plugin in order to create and select channels to send out notifications.
                     
                    <EuiLink
                      external={true}
                      href="#"
                    >
                      <a
                        className="euiLink euiLink--primary"
                        href="#"
                        rel="noreferrer"
                      >
                        Learn more
                        <EuiIcon
                          aria-label="External link"
                          className="euiLink__externalIcon"
                          size="s"
                          type="popout"
                        >
                          <EuiIconPopout
                            aria-label="External link"
                            className="euiIcon euiIcon--small euiLink__externalIcon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-label="External link"
                              className="euiIcon euiIcon--small euiLink__externalIcon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M13 8.5a.5.5 0 111 0V12a2 2 0 01-2 2H4a2 2 0 01-2-2V4a2 2 0 012-2h3.5a.5.5 0 010 1H4a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8.5zm-5.12.339a.5.5 0 11-.706-.707L13.305 2H10.5a.5.5 0 110-1H14a1 1 0 011 1v3.5a.5.5 0 11-1 0V2.72L7.88 8.838z"
                              />
                            </svg>
                          </EuiIconPopout>
                        </EuiIcon>
                      </a>
                    </EuiLink>
                    .
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="m"
      >
        <div
          className="euiSpacer euiSpacer--m"
        />
      </EuiSpacer>
    </div>
  </NotificationsCallOut>
  <ContentPanel
    actions={
      <DestinationsActions
        isEmailAllowed={false}
        onClickManageEmailGroups={[Function]}
        onClickManageSenders={[Function]}
      />
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Destinations (deprecated)"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Destinations (deprecated)
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem>
                      <div
                        className="euiFlexItem"
                      >
                        <DestinationsActions
                          isEmailAllowed={false}
                          onClickManageEmailGroups={[Function]}
                          onClickManageSenders={[Function]}
                        >
                          <EuiFlexGroup
                            alignItems="center"
                            justifyContent="spaceBetween"
                          >
                            <div
                              className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                            />
                          </EuiFlexGroup>
                        </DestinationsActions>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DeleteConfirmation
            isVisible={false}
            onCancel={[Function]}
            onConfirm={[Function]}
          />
          <ManageSenders
            httpClient={[MockFunction]}
            isEmailAllowed={false}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <ManageEmailGroups
            httpClient={[MockFunction]}
            isEmailAllowed={false}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <DestinationsControls
            activePage={0}
            allowList={Array []}
            onPageClick={[Function]}
            onSearchChange={[Function]}
            onTypeChange={[Function]}
            pageCount={1}
            search=""
            type="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconSearch
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M11.271 11.978l3.872 3.873a.502.502 0 00.708 0 .502.502 0 000-.708l-3.565-3.564c2.38-2.747 2.267-6.923-.342-9.532-2.73-2.73-7.17-2.73-9.898 0-2.728 2.729-2.728 7.17 0 9.9a6.955 6.955 0 004.949 2.05.5.5 0 000-1 5.96 5.96 0 01-4.242-1.757 6.01 6.01 0 010-8.486c2.337-2.34 6.143-2.34 8.484 0a6.01 6.01 0 010 8.486.5.5 0 00.034.738z"
                                          />
                                        </svg>
                                      </EuiIconSearch>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All type",
                            "value": "ALL",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All type
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconArrowLeft
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M10.843 13.069L6.232 8.384a.546.546 0 010-.768l4.61-4.685a.552.552 0 000-.771.53.53 0 00-.759 0l-4.61 4.684a1.65 1.65 0 000 2.312l4.61 4.684a.53.53 0 00.76 0 .552.552 0 000-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowLeft>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconArrowRight
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowRight>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DestinationsControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "field": "name",
                  "name": "Destination name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "type",
                  "name": "Destination type",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "user",
                  "name": "Last updated by",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "actions": Array [
                    Object {
                      "description": "View this destination.",
                      "name": "View",
                      "onClick": [Function],
                    },
                  ],
                  "name": "Actions",
                  "width": "35px",
                },
              ]
            }
            hasActions={true}
            isSelectable={true}
            items={Array []}
            noItemsMessage={
              <EmptyDestinations
                isFilterApplied={false}
                onResetFilters={[Function]}
              />
            }
            onChange={[Function]}
            pagination={
              Object {
                "pageIndex": 0,
                "pageSize": 20,
                "pageSizeOptions": Array [
                  5,
                  10,
                  20,
                  50,
                ],
                "totalItemCount": 0,
              }
            }
            responsive={true}
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "name",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          />
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_name_0",
                                    "name": "Destination name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_type_1",
                                    "name": "Destination type",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_user_2",
                                    "name": "Last updated by",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconArrowDown
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                      fillRule="non-zero"
                                                    />
                                                  </svg>
                                                </EuiIconArrowDown>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_name_0"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_name_0"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_name_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination name"
                                        >
                                          Destination name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconSortDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7 11.692V3.556C7 3.249 7.224 3 7.5 3s.5.249.5.556v8.136l4.096-4.096a.5.5 0 01.707.707l-4.242 4.243a1.494 1.494 0 01-.925.433.454.454 0 01-.272 0 1.494 1.494 0 01-.925-.433L2.197 8.303a.5.5 0 11.707-.707L7 11.692z"
                                          />
                                        </svg>
                                      </EuiIconSortDown>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_type_1"
                            isSorted={false}
                            key="_data_h_type_1"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_type_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination type",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination type"
                                        >
                                          Destination type
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_user_2"
                            isSorted={false}
                            key="_data_h_user_2"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_user_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Last updated by",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Last updated by"
                                        >
                                          Last updated by
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="right"
                            key="_actions_h_3"
                            width="35px"
                          >
                            <th
                              className="euiTableHeaderCell"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "35px",
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent euiTableCellContent--alignRight"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent euiTableCellContent--alignRight"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Actions",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Actions"
                                      >
                                        Actions
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={4}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={4}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <EmptyDestinations
                                      isFilterApplied={false}
                                      onResetFilters={[Function]}
                                    >
                                      <EuiEmptyPrompt
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing destinations.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing destinations.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </EmptyDestinations>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</DestinationsList>
`;

exports[`DestinationsList renders when email is disallowed 1`] = `
<DestinationsList
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "from=0&search=&size=20&sortDirection=desc&sortField=name&type=ALL",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
>
  <NotificationsInfoCallOut
    hasNotificationPlugin={false}
  >
    <div>
      <EuiCallOut
        title="Destinations have become channels in Notifications."
      >
        <div
          className="euiCallOut euiCallOut--primary"
        >
          <div
            className="euiCallOutHeader"
          >
            <span
              className="euiCallOutHeader__title"
            >
              Destinations have become channels in Notifications.
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Your destinations have been migrated to Notifications, a new centralized place to manage your notification channels. Destinations will be deprecated going forward.
                    <EuiSpacer
                      size="l"
                    >
                      <div
                        className="euiSpacer euiSpacer--l"
                      />
                    </EuiSpacer>
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="l"
      >
        <div
          className="euiSpacer euiSpacer--l"
        />
      </EuiSpacer>
    </div>
  </NotificationsInfoCallOut>
  <NotificationsCallOut>
    <div>
      <EuiCallOut
        color="danger"
        iconType="alert"
        title="Notifications plugin is not installed"
      >
        <div
          className="euiCallOut euiCallOut--danger"
        >
          <div
            className="euiCallOutHeader"
          >
            <EuiIcon
              aria-hidden="true"
              className="euiCallOutHeader__icon"
              color="inherit"
              size="m"
              type="alert"
            >
              <EuiIconAlert
                aria-hidden={true}
                className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
                focusable="false"
                role="img"
                style={null}
              >
                <svg
                  aria-hidden={true}
                  className="euiIcon euiIcon--medium euiIcon--inherit euiCallOutHeader__icon"
                  focusable="false"
                  height={16}
                  role="img"
                  style={null}
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M7.59 10.059L7.35 5.18h1.3L8.4 10.06h-.81zm.394 1.901a.61.61 0 01-.448-.186.606.606 0 01-.186-.444c0-.174.062-.323.186-.446a.614.614 0 01.448-.184c.169 0 .315.06.44.182.124.122.186.27.186.448a.6.6 0 01-.189.446.607.607 0 01-.437.184zM2 14a1 1 0 01-.878-1.479l6-11a1 1 0 011.756 0l6 11A1 1 0 0114 14H2zm0-1h12L8 2 2 13z"
                    fillRule="evenodd"
                  />
                </svg>
              </EuiIconAlert>
            </EuiIcon>
            <span
              className="euiCallOutHeader__title"
            >
              Notifications plugin is not installed
            </span>
          </div>
          <EuiText
            color="default"
            size="s"
          >
            <div
              className="euiText euiText--small"
            >
              <EuiTextColor
                color="default"
                component="div"
              >
                <div
                  className="euiTextColor euiTextColor--default"
                >
                  <p>
                    Install the notifications plugin in order to create and select channels to send out notifications.
                     
                    <EuiLink
                      external={true}
                      href="#"
                    >
                      <a
                        className="euiLink euiLink--primary"
                        href="#"
                        rel="noreferrer"
                      >
                        Learn more
                        <EuiIcon
                          aria-label="External link"
                          className="euiLink__externalIcon"
                          size="s"
                          type="popout"
                        >
                          <EuiIconPopout
                            aria-label="External link"
                            className="euiIcon euiIcon--small euiLink__externalIcon"
                            focusable="false"
                            role="img"
                            style={null}
                          >
                            <svg
                              aria-label="External link"
                              className="euiIcon euiIcon--small euiLink__externalIcon"
                              focusable="false"
                              height={16}
                              role="img"
                              style={null}
                              viewBox="0 0 16 16"
                              width={16}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M13 8.5a.5.5 0 111 0V12a2 2 0 01-2 2H4a2 2 0 01-2-2V4a2 2 0 012-2h3.5a.5.5 0 010 1H4a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V8.5zm-5.12.339a.5.5 0 11-.706-.707L13.305 2H10.5a.5.5 0 110-1H14a1 1 0 011 1v3.5a.5.5 0 11-1 0V2.72L7.88 8.838z"
                              />
                            </svg>
                          </EuiIconPopout>
                        </EuiIcon>
                      </a>
                    </EuiLink>
                    .
                  </p>
                </div>
              </EuiTextColor>
            </div>
          </EuiText>
        </div>
      </EuiCallOut>
      <EuiSpacer
        size="m"
      >
        <div
          className="euiSpacer euiSpacer--m"
        />
      </EuiSpacer>
    </div>
  </NotificationsCallOut>
  <ContentPanel
    actions={
      <DestinationsActions
        isEmailAllowed={false}
        onClickManageEmailGroups={[Function]}
        onClickManageSenders={[Function]}
      />
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Destinations (deprecated)"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Destinations (deprecated)
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem>
                      <div
                        className="euiFlexItem"
                      >
                        <DestinationsActions
                          isEmailAllowed={false}
                          onClickManageEmailGroups={[Function]}
                          onClickManageSenders={[Function]}
                        >
                          <EuiFlexGroup
                            alignItems="center"
                            justifyContent="spaceBetween"
                          >
                            <div
                              className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                            />
                          </EuiFlexGroup>
                        </DestinationsActions>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DeleteConfirmation
            isVisible={false}
            onCancel={[Function]}
            onConfirm={[Function]}
          />
          <ManageSenders
            httpClient={[MockFunction]}
            isEmailAllowed={false}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <ManageEmailGroups
            httpClient={[MockFunction]}
            isEmailAllowed={false}
            isVisible={false}
            onClickCancel={[Function]}
            onClickSave={[Function]}
          />
          <DestinationsControls
            activePage={0}
            allowList={
              Array [
                "chime",
                "slack",
                "custom_webhook",
              ]
            }
            onPageClick={[Function]}
            onSearchChange={[Function]}
            onTypeChange={[Function]}
            pageCount={1}
            search=""
            type="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconSearch
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M11.271 11.978l3.872 3.873a.502.502 0 00.708 0 .502.502 0 000-.708l-3.565-3.564c2.38-2.747 2.267-6.923-.342-9.532-2.73-2.73-7.17-2.73-9.898 0-2.728 2.729-2.728 7.17 0 9.9a6.955 6.955 0 004.949 2.05.5.5 0 000-1 5.96 5.96 0 01-4.242-1.757 6.01 6.01 0 010-8.486c2.337-2.34 6.143-2.34 8.484 0a6.01 6.01 0 010 8.486.5.5 0 00.034.738z"
                                          />
                                        </svg>
                                      </EuiIconSearch>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All type",
                            "value": "ALL",
                          },
                          Object {
                            "text": "Amazon Chime",
                            "value": "chime",
                          },
                          Object {
                            "text": "Slack",
                            "value": "slack",
                          },
                          Object {
                            "text": "Custom webhook",
                            "value": "custom_webhook",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All type
                                </option>
                                <option
                                  key="1"
                                  value="chime"
                                >
                                  Amazon Chime
                                </option>
                                <option
                                  key="2"
                                  value="slack"
                                >
                                  Slack
                                </option>
                                <option
                                  key="3"
                                  value="custom_webhook"
                                >
                                  Custom webhook
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconArrowLeft
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M10.843 13.069L6.232 8.384a.546.546 0 010-.768l4.61-4.685a.552.552 0 000-.771.53.53 0 00-.759 0l-4.61 4.684a1.65 1.65 0 000 2.312l4.61 4.684a.53.53 0 00.76 0 .552.552 0 000-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowLeft>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconArrowRight
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowRight>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DestinationsControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "field": "name",
                  "name": "Destination name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "type",
                  "name": "Destination type",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "field": "user",
                  "name": "Last updated by",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                  "width": "100px",
                },
                Object {
                  "actions": Array [
                    Object {
                      "description": "View this destination.",
                      "name": "View",
                      "onClick": [Function],
                    },
                  ],
                  "name": "Actions",
                  "width": "35px",
                },
              ]
            }
            hasActions={true}
            isSelectable={true}
            items={Array []}
            noItemsMessage={
              <EmptyDestinations
                isFilterApplied={false}
                onResetFilters={[Function]}
              />
            }
            onChange={[Function]}
            pagination={
              Object {
                "pageIndex": 0,
                "pageSize": 20,
                "pageSizeOptions": Array [
                  5,
                  10,
                  20,
                  50,
                ],
                "totalItemCount": 0,
              }
            }
            responsive={true}
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "name",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          />
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_name_0",
                                    "name": "Destination name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_type_1",
                                    "name": "Destination type",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_user_2",
                                    "name": "Last updated by",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconArrowDown
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                      fillRule="non-zero"
                                                    />
                                                  </svg>
                                                </EuiIconArrowDown>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_name_0"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_name_0"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_name_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination name"
                                        >
                                          Destination name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconSortDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7 11.692V3.556C7 3.249 7.224 3 7.5 3s.5.249.5.556v8.136l4.096-4.096a.5.5 0 01.707.707l-4.242 4.243a1.494 1.494 0 01-.925.433.454.454 0 01-.272 0 1.494 1.494 0 01-.925-.433L2.197 8.303a.5.5 0 11.707-.707L7 11.692z"
                                          />
                                        </svg>
                                      </EuiIconSortDown>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_type_1"
                            isSorted={false}
                            key="_data_h_type_1"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_type_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Destination type",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Destination type"
                                        >
                                          Destination type
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_user_2"
                            isSorted={false}
                            key="_data_h_user_2"
                            onSort={[Function]}
                            width="100px"
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_user_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "100px",
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Last updated by",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Last updated by"
                                        >
                                          Last updated by
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="right"
                            key="_actions_h_3"
                            width="35px"
                          >
                            <th
                              className="euiTableHeaderCell"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": "35px",
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent euiTableCellContent--alignRight"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent euiTableCellContent--alignRight"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Actions",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Actions"
                                      >
                                        Actions
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={4}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={4}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <EmptyDestinations
                                      isFilterApplied={false}
                                      onResetFilters={[Function]}
                                    >
                                      <EuiEmptyPrompt
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing destinations.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing destinations.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </EmptyDestinations>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</DestinationsList>
`;
