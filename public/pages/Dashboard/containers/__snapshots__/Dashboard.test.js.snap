// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard renders in flyout 1`] = `
<Dashboard
  detectorIds={Array []}
  flyoutAlerts={
    Array [
      Object {
        "acknowledged_time": null,
        "action_execution_results": Array [],
        "alert_history": Array [],
        "end_time": null,
        "error_message": null,
        "id": "Ciw2DH0B3-v9t8HD4m3Q",
        "last_notification_time": 1636587523369,
        "monitor_id": "7SwkDH0B3-v9t8HDk2zN",
        "monitor_name": "test-query-monitor",
        "monitor_version": 2,
        "schema_version": 3,
        "severity": "1",
        "start_time": 1636587463371,
        "state": "ACTIVE",
        "trigger_id": "7CwkDH0B3-v9t8HDk2w_",
        "trigger_name": "test-query-trigger",
      },
      Object {
        "acknowledged_time": null,
        "action_execution_results": Array [],
        "alert_history": Array [],
        "end_time": null,
        "error_message": null,
        "id": "Cyw2DH0B3-v9t8HD4m3Q",
        "last_notification_time": 1636587523370,
        "monitor_id": "7SwkDH0B3-v9t8HDk2zN",
        "monitor_name": "test-query-monitor",
        "monitor_version": 2,
        "schema_version": 3,
        "severity": "1",
        "start_time": 1636587463371,
        "state": "ACTIVE",
        "trigger_id": "_iw2DH0B3-v9t8HDNWwE",
        "trigger_name": "test-query-trigger2",
      },
    ]
  }
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "alertState=ALL&from=0&search=&severityLevel=ALL&size=20&sortDirection=desc&sortField=start_time",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  isAlertsFlyout={true}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
  monitorIds={Array []}
  perAlertView={true}
>
  <ContentPanel
    actions={
      Array [
        <EuiButton
          data-test-subj="acknowledgeAlertsButton"
          disabled={true}
          onClick={[Function]}
        >
          Acknowledge
        </EuiButton>,
      ]
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Alerts"
    titleSize="l"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Alerts
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem
                      key="0"
                    >
                      <div
                        className="euiFlexItem"
                      >
                        <EuiButton
                          data-test-subj="acknowledgeAlertsButton"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <EuiButtonDisplay
                            baseClassName="euiButton"
                            data-test-subj="acknowledgeAlertsButton"
                            disabled={true}
                            element="button"
                            isDisabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton-isDisabled"
                              data-test-subj="acknowledgeAlertsButton"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "minWidth": undefined,
                                }
                              }
                              type="button"
                            >
                              <EuiButtonContent
                                className="euiButton__content"
                                iconSide="left"
                                textProps={
                                  Object {
                                    "className": "euiButton__text",
                                  }
                                }
                              >
                                <span
                                  className="euiButtonContent euiButton__content"
                                >
                                  <span
                                    className="euiButton__text"
                                  >
                                    Acknowledge
                                  </span>
                                </span>
                              </EuiButtonContent>
                            </button>
                          </EuiButtonDisplay>
                        </EuiButton>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DashboardControls
            activePage={0}
            isAlertsFlyout={true}
            onPageChange={[Function]}
            onSearchChange={[Function]}
            onSeverityChange={[Function]}
            onStateChange={[Function]}
            pageCount={1}
            search=""
            severity="ALL"
            state="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconSearch
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M11.271 11.978l3.872 3.873a.502.502 0 00.708 0 .502.502 0 000-.708l-3.565-3.564c2.38-2.747 2.267-6.923-.342-9.532-2.73-2.73-7.17-2.73-9.898 0-2.728 2.729-2.728 7.17 0 9.9a6.955 6.955 0 004.949 2.05.5.5 0 000-1 5.96 5.96 0 01-4.242-1.757 6.01 6.01 0 010-8.486c2.337-2.34 6.143-2.34 8.484 0a6.01 6.01 0 010 8.486.5.5 0 00.034.738z"
                                          />
                                        </svg>
                                      </EuiIconSearch>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      data-test-subj="dashboardAlertStateFilter"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All alerts",
                            "value": "ALL",
                          },
                          Object {
                            "text": "Active",
                            "value": "ACTIVE",
                          },
                          Object {
                            "text": "Acknowledged",
                            "value": "ACKNOWLEDGED",
                          },
                          Object {
                            "text": "Completed",
                            "value": "COMPLETED",
                          },
                          Object {
                            "text": "Error",
                            "value": "ERROR",
                          },
                          Object {
                            "text": "Deleted",
                            "value": "DELETED",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                data-test-subj="dashboardAlertStateFilter"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All alerts
                                </option>
                                <option
                                  key="1"
                                  value="ACTIVE"
                                >
                                  Active
                                </option>
                                <option
                                  key="2"
                                  value="ACKNOWLEDGED"
                                >
                                  Acknowledged
                                </option>
                                <option
                                  key="3"
                                  value="COMPLETED"
                                >
                                  Completed
                                </option>
                                <option
                                  key="4"
                                  value="ERROR"
                                >
                                  Error
                                </option>
                                <option
                                  key="5"
                                  value="DELETED"
                                >
                                  Deleted
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconArrowLeft
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M10.843 13.069L6.232 8.384a.546.546 0 010-.768l4.61-4.685a.552.552 0 000-.771.53.53 0 00-.759 0l-4.61 4.684a1.65 1.65 0 000 2.312l4.61 4.684a.53.53 0 00.76 0 .552.552 0 000-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowLeft>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconArrowRight
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowRight>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DashboardControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "dataType": "date",
                  "field": "start_time",
                  "name": "Alert start time",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "dataType": "date",
                  "field": "end_time",
                  "name": "Alert end time",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "trigger_name",
                  "name": "Trigger name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                },
                Object {
                  "field": "severity",
                  "name": "Severity",
                  "sortable": false,
                  "truncateText": false,
                },
                Object {
                  "field": "state",
                  "name": "State",
                  "render": [Function],
                  "sortable": false,
                  "truncateText": false,
                },
                Object {
                  "dataType": "date",
                  "field": "acknowledged_time",
                  "name": "Time acknowledged",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
              ]
            }
            data-test-subj="alertsDashboard_table"
            isSelectable={true}
            itemId={[Function]}
            items={Array []}
            noItemsMessage={<DashboardEmptyPrompt />}
            onChange={[Function]}
            pagination={
              Object {
                "pageIndex": 0,
                "pageSize": 20,
                "pageSizeOptions": Array [
                  5,
                  10,
                  20,
                  50,
                ],
                "totalItemCount": 0,
              }
            }
            responsive={true}
            selection={
              Object {
                "onSelectionChange": [Function],
                "selectable": [Function],
                "selectableMessage": [Function],
              }
            }
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "start_time",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
              data-test-subj="alertsDashboard_table"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiI18n
                              default="Select all rows"
                              token="euiBasicTable.selectAllRows"
                            >
                              <EuiCheckbox
                                aria-label="Select all rows"
                                checked={false}
                                compressed={false}
                                disabled={true}
                                id="_selection_column-checkbox_generated-id"
                                indeterminate={false}
                                label="Select all rows"
                                onChange={[Function]}
                              >
                                <div
                                  className="euiCheckbox"
                                >
                                  <input
                                    aria-label="Select all rows"
                                    checked={false}
                                    className="euiCheckbox__input"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <div
                                    className="euiCheckbox__square"
                                  />
                                  <label
                                    className="euiCheckbox__label"
                                    htmlFor="_selection_column-checkbox_generated-id"
                                  >
                                    Select all rows
                                  </label>
                                </div>
                              </EuiCheckbox>
                            </EuiI18n>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_start_time_0",
                                    "name": "Alert start time",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_end_time_1",
                                    "name": "Alert end time",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_trigger_name_2",
                                    "name": "Trigger name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_acknowledged_time_5",
                                    "name": "Time acknowledged",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconArrowDown
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                      fillRule="non-zero"
                                                    />
                                                  </svg>
                                                </EuiIconArrowDown>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCellCheckbox
                            key="_selection_column_h"
                          >
                            <th
                              className="euiTableHeaderCellCheckbox"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableCellContent"
                              >
                                <EuiI18n
                                  default="Select all rows"
                                  token="euiBasicTable.selectAllRows"
                                >
                                  <EuiCheckbox
                                    aria-label="Select all rows"
                                    checked={false}
                                    compressed={false}
                                    data-test-subj="checkboxSelectAll"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    indeterminate={false}
                                    label={null}
                                    onChange={[Function]}
                                    type="inList"
                                  >
                                    <div
                                      className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                    >
                                      <input
                                        aria-label="Select all rows"
                                        checked={false}
                                        className="euiCheckbox__input"
                                        data-test-subj="checkboxSelectAll"
                                        disabled={true}
                                        id="_selection_column-checkbox_generated-id"
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                      <div
                                        className="euiCheckbox__square"
                                      />
                                    </div>
                                  </EuiCheckbox>
                                </EuiI18n>
                              </div>
                            </th>
                          </EuiTableHeaderCellCheckbox>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_start_time_0"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_start_time_0"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_start_time_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Alert start time",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Alert start time"
                                        >
                                          Alert start time
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconSortDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7 11.692V3.556C7 3.249 7.224 3 7.5 3s.5.249.5.556v8.136l4.096-4.096a.5.5 0 01.707.707l-4.242 4.243a1.494 1.494 0 01-.925.433.454.454 0 01-.272 0 1.494 1.494 0 01-.925-.433L2.197 8.303a.5.5 0 11.707-.707L7 11.692z"
                                          />
                                        </svg>
                                      </EuiIconSortDown>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_end_time_1"
                            isSorted={false}
                            key="_data_h_end_time_1"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_end_time_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Alert end time",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Alert end time"
                                        >
                                          Alert end time
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_trigger_name_2"
                            isSorted={false}
                            key="_data_h_trigger_name_2"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_trigger_name_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Trigger name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Trigger name"
                                        >
                                          Trigger name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_severity_3"
                            key="_data_h_severity_3"
                          >
                            <th
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_severity_3"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Severity",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Severity"
                                      >
                                        Severity
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_state_4"
                            key="_data_h_state_4"
                          >
                            <th
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_state_4"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "State",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="State"
                                      >
                                        State
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_acknowledged_time_5"
                            isSorted={false}
                            key="_data_h_acknowledged_time_5"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_acknowledged_time_5"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Time acknowledged",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Time acknowledged"
                                        >
                                          Time acknowledged
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={7}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={7}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <DashboardEmptyPrompt>
                                      <EuiEmptyPrompt
                                        actions={
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            Create monitor
                                          </EuiButton>
                                        }
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                          <EuiSpacer
                                            size="l"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--l"
                                            />
                                          </EuiSpacer>
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            <EuiButtonDisplay
                                              baseClassName="euiButton"
                                              element="a"
                                              fill={true}
                                              href="alerting#/create-monitor"
                                              isDisabled={false}
                                              rel="noreferrer"
                                            >
                                              <a
                                                className="euiButton euiButton--primary euiButton--fill"
                                                disabled={false}
                                                href="alerting#/create-monitor"
                                                rel="noreferrer"
                                                style={
                                                  Object {
                                                    "minWidth": undefined,
                                                  }
                                                }
                                              >
                                                <EuiButtonContent
                                                  className="euiButton__content"
                                                  iconSide="left"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButton__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButton__content"
                                                  >
                                                    <span
                                                      className="euiButton__text"
                                                    >
                                                      Create monitor
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </a>
                                            </EuiButtonDisplay>
                                          </EuiButton>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </DashboardEmptyPrompt>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</Dashboard>
`;

exports[`Dashboard renders with alert by triggers view 1`] = `
<Dashboard
  detectorIds={Array []}
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "alertState=ALL&from=0&search=&severityLevel=ALL&size=10000&sortDirection=desc&sortField=start_time",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
  monitorIds={Array []}
  perAlertView={false}
>
  <ContentPanel
    actions={
      Array [
        <EuiButton
          disabled={true}
          onClick={[Function]}
        >
          View alert details
        </EuiButton>,
        <EuiButton
          data-test-subj="acknowledgeAlertsButton"
          disabled={true}
          onClick={[Function]}
        >
          Acknowledge
        </EuiButton>,
      ]
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Alerts by triggers"
    titleSize="l"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Alerts by triggers
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem
                      key="0"
                    >
                      <div
                        className="euiFlexItem"
                      >
                        <EuiButton
                          disabled={true}
                          onClick={[Function]}
                        >
                          <EuiButtonDisplay
                            baseClassName="euiButton"
                            disabled={true}
                            element="button"
                            isDisabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton-isDisabled"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "minWidth": undefined,
                                }
                              }
                              type="button"
                            >
                              <EuiButtonContent
                                className="euiButton__content"
                                iconSide="left"
                                textProps={
                                  Object {
                                    "className": "euiButton__text",
                                  }
                                }
                              >
                                <span
                                  className="euiButtonContent euiButton__content"
                                >
                                  <span
                                    className="euiButton__text"
                                  >
                                    View alert details
                                  </span>
                                </span>
                              </EuiButtonContent>
                            </button>
                          </EuiButtonDisplay>
                        </EuiButton>
                      </div>
                    </EuiFlexItem>
                    <EuiFlexItem
                      key="1"
                    >
                      <div
                        className="euiFlexItem"
                      >
                        <EuiButton
                          data-test-subj="acknowledgeAlertsButton"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <EuiButtonDisplay
                            baseClassName="euiButton"
                            data-test-subj="acknowledgeAlertsButton"
                            disabled={true}
                            element="button"
                            isDisabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton-isDisabled"
                              data-test-subj="acknowledgeAlertsButton"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "minWidth": undefined,
                                }
                              }
                              type="button"
                            >
                              <EuiButtonContent
                                className="euiButton__content"
                                iconSide="left"
                                textProps={
                                  Object {
                                    "className": "euiButton__text",
                                  }
                                }
                              >
                                <span
                                  className="euiButtonContent euiButton__content"
                                >
                                  <span
                                    className="euiButton__text"
                                  >
                                    Acknowledge
                                  </span>
                                </span>
                              </EuiButtonContent>
                            </button>
                          </EuiButtonDisplay>
                        </EuiButton>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DashboardControls
            activePage={0}
            isAlertsFlyout={false}
            onPageChange={[Function]}
            onSearchChange={[Function]}
            onSeverityChange={[Function]}
            onStateChange={[Function]}
            pageCount={1}
            search=""
            severity="ALL"
            state="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconSearch
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M11.271 11.978l3.872 3.873a.502.502 0 00.708 0 .502.502 0 000-.708l-3.565-3.564c2.38-2.747 2.267-6.923-.342-9.532-2.73-2.73-7.17-2.73-9.898 0-2.728 2.729-2.728 7.17 0 9.9a6.955 6.955 0 004.949 2.05.5.5 0 000-1 5.96 5.96 0 01-4.242-1.757 6.01 6.01 0 010-8.486c2.337-2.34 6.143-2.34 8.484 0a6.01 6.01 0 010 8.486.5.5 0 00.034.738z"
                                          />
                                        </svg>
                                      </EuiIconSearch>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All severity levels",
                            "value": "ALL",
                          },
                          Object {
                            "text": "1 (Highest)",
                            "value": "1",
                          },
                          Object {
                            "text": "2 (High)",
                            "value": "2",
                          },
                          Object {
                            "text": "3 (Medium)",
                            "value": "3",
                          },
                          Object {
                            "text": "4 (Low)",
                            "value": "4",
                          },
                          Object {
                            "text": "5 (Lowest)",
                            "value": "5",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All severity levels
                                </option>
                                <option
                                  key="1"
                                  value="1"
                                >
                                  1 (Highest)
                                </option>
                                <option
                                  key="2"
                                  value="2"
                                >
                                  2 (High)
                                </option>
                                <option
                                  key="3"
                                  value="3"
                                >
                                  3 (Medium)
                                </option>
                                <option
                                  key="4"
                                  value="4"
                                >
                                  4 (Low)
                                </option>
                                <option
                                  key="5"
                                  value="5"
                                >
                                  5 (Lowest)
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      data-test-subj="dashboardAlertStateFilter"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All alerts",
                            "value": "ALL",
                          },
                          Object {
                            "text": "Active",
                            "value": "ACTIVE",
                          },
                          Object {
                            "text": "Acknowledged",
                            "value": "ACKNOWLEDGED",
                          },
                          Object {
                            "text": "Completed",
                            "value": "COMPLETED",
                          },
                          Object {
                            "text": "Error",
                            "value": "ERROR",
                          },
                          Object {
                            "text": "Deleted",
                            "value": "DELETED",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                data-test-subj="dashboardAlertStateFilter"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All alerts
                                </option>
                                <option
                                  key="1"
                                  value="ACTIVE"
                                >
                                  Active
                                </option>
                                <option
                                  key="2"
                                  value="ACKNOWLEDGED"
                                >
                                  Acknowledged
                                </option>
                                <option
                                  key="3"
                                  value="COMPLETED"
                                >
                                  Completed
                                </option>
                                <option
                                  key="4"
                                  value="ERROR"
                                >
                                  Error
                                </option>
                                <option
                                  key="5"
                                  value="DELETED"
                                >
                                  Deleted
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconArrowDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                            fillRule="non-zero"
                                          />
                                        </svg>
                                      </EuiIconArrowDown>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconArrowLeft
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M10.843 13.069L6.232 8.384a.546.546 0 010-.768l4.61-4.685a.552.552 0 000-.771.53.53 0 00-.759 0l-4.61 4.684a1.65 1.65 0 000 2.312l4.61 4.684a.53.53 0 00.76 0 .552.552 0 000-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowLeft>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconArrowRight
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M5.157 13.069l4.611-4.685a.546.546 0 000-.768L5.158 2.93a.552.552 0 010-.771.53.53 0 01.759 0l4.61 4.684c.631.641.63 1.672 0 2.312l-4.61 4.684a.53.53 0 01-.76 0 .552.552 0 010-.771z"
                                        fillRule="nonzero"
                                      />
                                    </svg>
                                  </EuiIconArrowRight>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DashboardControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "field": "total",
                  "name": "Alerts",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "ACTIVE",
                  "name": "Active",
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "ACKNOWLEDGED",
                  "name": "Acknowledged",
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "ERROR",
                  "name": "Errors",
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "trigger_name",
                  "name": "Trigger name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                },
                Object {
                  "dataType": "date",
                  "field": "start_time",
                  "name": "Trigger start time",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "dataType": "date",
                  "field": "last_notification_time",
                  "name": "Trigger last updated",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": true,
                },
                Object {
                  "field": "severity",
                  "name": "Severity",
                  "sortable": false,
                  "truncateText": false,
                },
                Object {
                  "field": "monitor_name",
                  "name": "Monitor name",
                  "render": [Function],
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                },
              ]
            }
            data-test-subj="alertsDashboard_table"
            isSelectable={true}
            itemId={[Function]}
            items={Array []}
            noItemsMessage={<DashboardEmptyPrompt />}
            onChange={[Function]}
            responsive={true}
            selection={
              Object {
                "onSelectionChange": [Function],
                "selectable": [Function],
                "selectableMessage": [Function],
              }
            }
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "start_time",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
              data-test-subj="alertsDashboard_table"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiI18n
                              default="Select all rows"
                              token="euiBasicTable.selectAllRows"
                            >
                              <EuiCheckbox
                                aria-label="Select all rows"
                                checked={false}
                                compressed={false}
                                disabled={true}
                                id="_selection_column-checkbox_generated-id"
                                indeterminate={false}
                                label="Select all rows"
                                onChange={[Function]}
                              >
                                <div
                                  className="euiCheckbox"
                                >
                                  <input
                                    aria-label="Select all rows"
                                    checked={false}
                                    className="euiCheckbox__input"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <div
                                    className="euiCheckbox__square"
                                  />
                                  <label
                                    className="euiCheckbox__label"
                                    htmlFor="_selection_column-checkbox_generated-id"
                                  >
                                    Select all rows
                                  </label>
                                </div>
                              </EuiCheckbox>
                            </EuiI18n>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_total_0",
                                    "name": "Alerts",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_ACTIVE_1",
                                    "name": "Active",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_ACKNOWLEDGED_2",
                                    "name": "Acknowledged",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_ERROR_3",
                                    "name": "Errors",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_trigger_name_4",
                                    "name": "Trigger name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_start_time_5",
                                    "name": "Trigger start time",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_last_notification_time_6",
                                    "name": "Trigger last updated",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_monitor_name_8",
                                    "name": "Monitor name",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconArrowDown
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M13.069 5.157L8.384 9.768a.546.546 0 01-.768 0L2.93 5.158a.552.552 0 00-.771 0 .53.53 0 000 .759l4.684 4.61c.641.631 1.672.63 2.312 0l4.684-4.61a.53.53 0 000-.76.552.552 0 00-.771 0z"
                                                      fillRule="non-zero"
                                                    />
                                                  </svg>
                                                </EuiIconArrowDown>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCellCheckbox
                            key="_selection_column_h"
                          >
                            <th
                              className="euiTableHeaderCellCheckbox"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableCellContent"
                              >
                                <EuiI18n
                                  default="Select all rows"
                                  token="euiBasicTable.selectAllRows"
                                >
                                  <EuiCheckbox
                                    aria-label="Select all rows"
                                    checked={false}
                                    compressed={false}
                                    data-test-subj="checkboxSelectAll"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    indeterminate={false}
                                    label={null}
                                    onChange={[Function]}
                                    type="inList"
                                  >
                                    <div
                                      className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                    >
                                      <input
                                        aria-label="Select all rows"
                                        checked={false}
                                        className="euiCheckbox__input"
                                        data-test-subj="checkboxSelectAll"
                                        disabled={true}
                                        id="_selection_column-checkbox_generated-id"
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                      <div
                                        className="euiCheckbox__square"
                                      />
                                    </div>
                                  </EuiCheckbox>
                                </EuiI18n>
                              </div>
                            </th>
                          </EuiTableHeaderCellCheckbox>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_total_0"
                            isSorted={false}
                            key="_data_h_total_0"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_total_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Alerts",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Alerts"
                                        >
                                          Alerts
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_ACTIVE_1"
                            isSorted={false}
                            key="_data_h_ACTIVE_1"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_ACTIVE_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Active",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Active"
                                        >
                                          Active
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_ACKNOWLEDGED_2"
                            isSorted={false}
                            key="_data_h_ACKNOWLEDGED_2"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_ACKNOWLEDGED_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Acknowledged",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Acknowledged"
                                        >
                                          Acknowledged
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_ERROR_3"
                            isSorted={false}
                            key="_data_h_ERROR_3"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_ERROR_3"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Errors",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Errors"
                                        >
                                          Errors
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_trigger_name_4"
                            isSorted={false}
                            key="_data_h_trigger_name_4"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_trigger_name_4"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Trigger name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Trigger name"
                                        >
                                          Trigger name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_start_time_5"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_start_time_5"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_start_time_5"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Trigger start time",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Trigger start time"
                                        >
                                          Trigger start time
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconSortDown
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M7 11.692V3.556C7 3.249 7.224 3 7.5 3s.5.249.5.556v8.136l4.096-4.096a.5.5 0 01.707.707l-4.242 4.243a1.494 1.494 0 01-.925.433.454.454 0 01-.272 0 1.494 1.494 0 01-.925-.433L2.197 8.303a.5.5 0 11.707-.707L7 11.692z"
                                          />
                                        </svg>
                                      </EuiIconSortDown>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_last_notification_time_6"
                            isSorted={false}
                            key="_data_h_last_notification_time_6"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_last_notification_time_6"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Trigger last updated",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Trigger last updated"
                                        >
                                          Trigger last updated
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_severity_7"
                            key="_data_h_severity_7"
                          >
                            <th
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_severity_7"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Severity",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Severity"
                                      >
                                        Severity
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_monitor_name_8"
                            isSorted={false}
                            key="_data_h_monitor_name_8"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_monitor_name_8"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Monitor name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Monitor name"
                                        >
                                          Monitor name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={10}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={10}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <DashboardEmptyPrompt>
                                      <EuiEmptyPrompt
                                        actions={
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            Create monitor
                                          </EuiButton>
                                        }
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                          <EuiSpacer
                                            size="l"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--l"
                                            />
                                          </EuiSpacer>
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            <EuiButtonDisplay
                                              baseClassName="euiButton"
                                              element="a"
                                              fill={true}
                                              href="alerting#/create-monitor"
                                              isDisabled={false}
                                              rel="noreferrer"
                                            >
                                              <a
                                                className="euiButton euiButton--primary euiButton--fill"
                                                disabled={false}
                                                href="alerting#/create-monitor"
                                                rel="noreferrer"
                                                style={
                                                  Object {
                                                    "minWidth": undefined,
                                                  }
                                                }
                                              >
                                                <EuiButtonContent
                                                  className="euiButton__content"
                                                  iconSide="left"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButton__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButton__content"
                                                  >
                                                    <span
                                                      className="euiButton__text"
                                                    >
                                                      Create monitor
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </a>
                                            </EuiButtonDisplay>
                                          </EuiButton>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </DashboardEmptyPrompt>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</Dashboard>
`;

exports[`Dashboard renders with per alert view 1`] = `
<Dashboard
  detectorIds={Array []}
  history={
    Object {
      "action": "REPLACE",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 0,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "hash": "",
              "search": "alertState=ALL&from=0&search=&severityLevel=ALL&size=20&sortDirection=desc&sortField=start_time",
              "state": undefined,
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  httpClient={[MockFunction]}
  location={
    Object {
      "hash": "",
      "search": "",
      "state": undefined,
    }
  }
  monitorIds={Array []}
  perAlertView={true}
>
  <ContentPanel
    actions={
      Array [
        <EuiButton
          data-test-subj="acknowledgeAlertsButton"
          disabled={true}
          onClick={[Function]}
        >
          Acknowledge
        </EuiButton>,
      ]
    }
    bodyStyles={
      Object {
        "padding": "initial",
      }
    }
    title="Alerts"
    titleSize="l"
  >
    <EuiPanel
      style={
        Object {
          "paddingLeft": "0px",
          "paddingRight": "0px",
        }
      }
    >
      <div
        className="euiPanel euiPanel--paddingMedium euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow"
        style={
          Object {
            "paddingLeft": "0px",
            "paddingRight": "0px",
          }
        }
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="spaceBetween"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiFlexItem>
              <div
                className="euiFlexItem"
              >
                <EuiTitle
                  size="l"
                >
                  <h3
                    className="euiTitle euiTitle--large"
                  >
                    Alerts
                  </h3>
                </EuiTitle>
              </div>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiFlexGroup
                  alignItems="center"
                  justifyContent="spaceBetween"
                >
                  <div
                    className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                  >
                    <EuiFlexItem
                      key="0"
                    >
                      <div
                        className="euiFlexItem"
                      >
                        <EuiButton
                          data-test-subj="acknowledgeAlertsButton"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <EuiButtonDisplay
                            baseClassName="euiButton"
                            data-test-subj="acknowledgeAlertsButton"
                            disabled={true}
                            element="button"
                            isDisabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton-isDisabled"
                              data-test-subj="acknowledgeAlertsButton"
                              disabled={true}
                              onClick={[Function]}
                              style={
                                Object {
                                  "minWidth": undefined,
                                }
                              }
                              type="button"
                            >
                              <EuiButtonContent
                                className="euiButton__content"
                                iconSide="left"
                                textProps={
                                  Object {
                                    "className": "euiButton__text",
                                  }
                                }
                              >
                                <span
                                  className="euiButtonContent euiButton__content"
                                >
                                  <span
                                    className="euiButton__text"
                                  >
                                    Acknowledge
                                  </span>
                                </span>
                              </EuiButtonContent>
                            </button>
                          </EuiButtonDisplay>
                        </EuiButton>
                      </div>
                    </EuiFlexItem>
                  </div>
                </EuiFlexGroup>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
        <EuiText
          color="subdued"
          size="xs"
          style={
            Object {
              "padding": "0px 10px",
            }
          }
        >
          <div
            className="euiText euiText--extraSmall"
            style={
              Object {
                "padding": "0px 10px",
              }
            }
          >
            <EuiTextColor
              color="subdued"
              component="div"
            >
              <div
                className="euiTextColor euiTextColor--subdued"
              />
            </EuiTextColor>
          </div>
        </EuiText>
        <EuiHorizontalRule
          className=""
          margin="xs"
        >
          <hr
            className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
          />
        </EuiHorizontalRule>
        <div
          style={
            Object {
              "padding": "initial",
            }
          }
        >
          <DashboardControls
            activePage={0}
            isAlertsFlyout={false}
            onPageChange={[Function]}
            onSearchChange={[Function]}
            onSeverityChange={[Function]}
            onStateChange={[Function]}
            pageCount={1}
            search=""
            severity="ALL"
            state="ALL"
          >
            <EuiFlexGroup
              style={
                Object {
                  "padding": "0px 5px",
                }
              }
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                style={
                  Object {
                    "padding": "0px 5px",
                  }
                }
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiFieldSearch
                      compressed={false}
                      fullWidth={true}
                      incremental={false}
                      isClearable={true}
                      isLoading={false}
                      onChange={[Function]}
                      placeholder="Search"
                      value=""
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={true}
                        icon="search"
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout euiFormControlLayout--fullWidth"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <input
                                className="euiFieldSearch euiFieldSearch--fullWidth"
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Search"
                                type="search"
                                value=""
                              />
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon="search"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="search"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="search"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiFieldSearch>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All severity levels",
                            "value": "ALL",
                          },
                          Object {
                            "text": "1 (Highest)",
                            "value": "1",
                          },
                          Object {
                            "text": "2 (High)",
                            "value": "2",
                          },
                          Object {
                            "text": "3 (Medium)",
                            "value": "3",
                          },
                          Object {
                            "text": "4 (Low)",
                            "value": "4",
                          },
                          Object {
                            "text": "5 (Lowest)",
                            "value": "5",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All severity levels
                                </option>
                                <option
                                  key="1"
                                  value="1"
                                >
                                  1 (Highest)
                                </option>
                                <option
                                  key="2"
                                  value="2"
                                >
                                  2 (High)
                                </option>
                                <option
                                  key="3"
                                  value="3"
                                >
                                  3 (Medium)
                                </option>
                                <option
                                  key="4"
                                  value="4"
                                >
                                  4 (Low)
                                </option>
                                <option
                                  key="5"
                                  value="5"
                                >
                                  5 (Lowest)
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiSelect
                      data-test-subj="dashboardAlertStateFilter"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "text": "All alerts",
                            "value": "ALL",
                          },
                          Object {
                            "text": "Active",
                            "value": "ACTIVE",
                          },
                          Object {
                            "text": "Acknowledged",
                            "value": "ACKNOWLEDGED",
                          },
                          Object {
                            "text": "Completed",
                            "value": "COMPLETED",
                          },
                          Object {
                            "text": "Error",
                            "value": "ERROR",
                          },
                          Object {
                            "text": "Deleted",
                            "value": "DELETED",
                          },
                        ]
                      }
                      value="ALL"
                    >
                      <EuiFormControlLayout
                        compressed={false}
                        fullWidth={false}
                        icon={
                          Object {
                            "side": "right",
                            "type": "arrowDown",
                          }
                        }
                        isLoading={false}
                      >
                        <div
                          className="euiFormControlLayout"
                        >
                          <div
                            className="euiFormControlLayout__childrenWrapper"
                          >
                            <EuiValidatableControl>
                              <select
                                className="euiSelect"
                                data-test-subj="dashboardAlertStateFilter"
                                onChange={[Function]}
                                onMouseUp={[Function]}
                                value="ALL"
                              >
                                <option
                                  key="0"
                                  value="ALL"
                                >
                                  All alerts
                                </option>
                                <option
                                  key="1"
                                  value="ACTIVE"
                                >
                                  Active
                                </option>
                                <option
                                  key="2"
                                  value="ACKNOWLEDGED"
                                >
                                  Acknowledged
                                </option>
                                <option
                                  key="3"
                                  value="COMPLETED"
                                >
                                  Completed
                                </option>
                                <option
                                  key="4"
                                  value="ERROR"
                                >
                                  Error
                                </option>
                                <option
                                  key="5"
                                  value="DELETED"
                                >
                                  Deleted
                                </option>
                              </select>
                            </EuiValidatableControl>
                            <EuiFormControlLayoutIcons
                              compressed={false}
                              icon={
                                Object {
                                  "side": "right",
                                  "type": "arrowDown",
                                }
                              }
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                              >
                                <EuiFormControlLayoutCustomIcon
                                  size="m"
                                  type="arrowDown"
                                >
                                  <span
                                    className="euiFormControlLayoutCustomIcon"
                                  >
                                    <EuiIcon
                                      aria-hidden="true"
                                      className="euiFormControlLayoutCustomIcon__icon"
                                      size="m"
                                      type="arrowDown"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </EuiFormControlLayoutCustomIcon>
                              </div>
                            </EuiFormControlLayoutIcons>
                          </div>
                        </div>
                      </EuiFormControlLayout>
                    </EuiSelect>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                    style={
                      Object {
                        "justifyContent": "center",
                      }
                    }
                  >
                    <EuiPagination
                      activePage={0}
                      onPageClick={[Function]}
                      pageCount={1}
                    >
                      <nav
                        className="euiPagination"
                      >
                        <EuiI18n
                          default="Previous page, {page}"
                          token="euiPagination.previousPage"
                          values={
                            Object {
                              "page": 0,
                            }
                          }
                        >
                          <EuiI18n
                            default="Previous page"
                            token="euiPagination.disabledPreviousPage"
                          >
                            <EuiButtonIcon
                              aria-label="Previous page"
                              color="text"
                              data-test-subj="pagination-button-previous"
                              disabled={true}
                              iconType="arrowLeft"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Previous page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-previous"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowLeft"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                        <ul
                          className="euiPagination__list"
                        >
                          <PaginationButton
                            key="0"
                            pageIndex={0}
                          >
                            <li
                              className="euiPagination__item"
                            >
                              <EuiPaginationButton
                                hideOnMobile={true}
                                isActive={true}
                                onClick={[Function]}
                                pageIndex={0}
                                totalPages={1}
                              >
                                <EuiI18n
                                  default="Page {page} of {totalPages}"
                                  token="euiPaginationButton.longPageString"
                                  values={
                                    Object {
                                      "page": 1,
                                      "totalPages": 1,
                                    }
                                  }
                                >
                                  <EuiI18n
                                    default="Page {page}"
                                    token="euiPaginationButton.shortPageString"
                                    values={
                                      Object {
                                        "page": 1,
                                      }
                                    }
                                  >
                                    <EuiButtonEmpty
                                      aria-current={true}
                                      aria-label="Page 1 of 1"
                                      className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                      color="text"
                                      data-test-subj="pagination-button-0"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="s"
                                    >
                                      <button
                                        aria-current={true}
                                        aria-label="Page 1 of 1"
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                        data-test-subj="pagination-button-0"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="left"
                                          iconSize="m"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonEmpty__content"
                                          >
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              1
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </EuiI18n>
                                </EuiI18n>
                              </EuiPaginationButton>
                            </li>
                          </PaginationButton>
                        </ul>
                        <EuiI18n
                          default="Next page, {page}"
                          token="euiPagination.nextPage"
                          values={
                            Object {
                              "page": 2,
                            }
                          }
                        >
                          <EuiI18n
                            default="Next page"
                            token="euiPagination.disabledNextPage"
                          >
                            <EuiButtonIcon
                              aria-label="Next page"
                              color="text"
                              data-test-subj="pagination-button-next"
                              disabled={true}
                              iconType="arrowRight"
                              onClick={[Function]}
                            >
                              <button
                                aria-label="Next page"
                                className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                data-test-subj="pagination-button-next"
                                disabled={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonIcon__icon"
                                  color="inherit"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon--inherit euiIcon-isLoading euiButtonIcon__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                              </button>
                            </EuiButtonIcon>
                          </EuiI18n>
                        </EuiI18n>
                      </nav>
                    </EuiPagination>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DashboardControls>
          <EuiHorizontalRule
            margin="xs"
          >
            <hr
              className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginXSmall"
            />
          </EuiHorizontalRule>
          <EuiBasicTable
            columns={
              Array [
                Object {
                  "dataType": "date",
                  "field": "start_time",
                  "name": "Alert start time",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "dataType": "date",
                  "field": "end_time",
                  "name": "Alert end time",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
                Object {
                  "field": "trigger_name",
                  "name": "Trigger name",
                  "sortable": true,
                  "textOnly": true,
                  "truncateText": true,
                },
                Object {
                  "field": "severity",
                  "name": "Severity",
                  "sortable": false,
                  "truncateText": false,
                },
                Object {
                  "field": "state",
                  "name": "State",
                  "render": [Function],
                  "sortable": false,
                  "truncateText": false,
                },
                Object {
                  "dataType": "date",
                  "field": "acknowledged_time",
                  "name": "Time acknowledged",
                  "render": [Function],
                  "sortable": true,
                  "truncateText": false,
                },
              ]
            }
            data-test-subj="alertsDashboard_table"
            isSelectable={true}
            itemId={[Function]}
            items={Array []}
            noItemsMessage={<DashboardEmptyPrompt />}
            onChange={[Function]}
            pagination={
              Object {
                "pageIndex": 0,
                "pageSize": 20,
                "pageSizeOptions": Array [
                  5,
                  10,
                  20,
                  50,
                ],
                "totalItemCount": 0,
              }
            }
            responsive={true}
            selection={
              Object {
                "onSelectionChange": [Function],
                "selectable": [Function],
                "selectableMessage": [Function],
              }
            }
            sorting={
              Object {
                "sort": Object {
                  "direction": "desc",
                  "field": "start_time",
                },
              }
            }
            tableLayout="fixed"
          >
            <div
              className="euiBasicTable"
              data-test-subj="alertsDashboard_table"
            >
              <div>
                <EuiTableHeaderMobile>
                  <div
                    className="euiTableHeaderMobile"
                  >
                    <EuiFlexGroup
                      alignItems="baseline"
                      justifyContent="spaceBetween"
                      responsive={false}
                    >
                      <div
                        className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                      >
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiI18n
                              default="Select all rows"
                              token="euiBasicTable.selectAllRows"
                            >
                              <EuiCheckbox
                                aria-label="Select all rows"
                                checked={false}
                                compressed={false}
                                disabled={true}
                                id="_selection_column-checkbox_generated-id"
                                indeterminate={false}
                                label="Select all rows"
                                onChange={[Function]}
                              >
                                <div
                                  className="euiCheckbox"
                                >
                                  <input
                                    aria-label="Select all rows"
                                    checked={false}
                                    className="euiCheckbox__input"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                  <div
                                    className="euiCheckbox__square"
                                  />
                                  <label
                                    className="euiCheckbox__label"
                                    htmlFor="_selection_column-checkbox_generated-id"
                                  >
                                    Select all rows
                                  </label>
                                </div>
                              </EuiCheckbox>
                            </EuiI18n>
                          </div>
                        </EuiFlexItem>
                        <EuiFlexItem
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero"
                          >
                            <EuiTableSortMobile
                              items={
                                Array [
                                  Object {
                                    "isSortAscending": false,
                                    "isSorted": true,
                                    "key": "_data_s_start_time_0",
                                    "name": "Alert start time",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_end_time_1",
                                    "name": "Alert end time",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_trigger_name_2",
                                    "name": "Trigger name",
                                    "onSort": [Function],
                                  },
                                  Object {
                                    "isSortAscending": undefined,
                                    "isSorted": false,
                                    "key": "_data_s_acknowledged_time_5",
                                    "name": "Time acknowledged",
                                    "onSort": [Function],
                                  },
                                ]
                              }
                            >
                              <div
                                className="euiTableSortMobile"
                              >
                                <EuiPopover
                                  anchorPosition="downRight"
                                  button={
                                    <EuiButtonEmpty
                                      flush="right"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <EuiI18n
                                        default="Sorting"
                                        token="euiTableSortMobile.sorting"
                                      />
                                    </EuiButtonEmpty>
                                  }
                                  closePopover={[Function]}
                                  display="inlineBlock"
                                  hasArrow={true}
                                  isOpen={false}
                                  ownFocus={true}
                                  panelPaddingSize="none"
                                >
                                  <div
                                    className="euiPopover euiPopover--anchorDownRight"
                                  >
                                    <div
                                      className="euiPopover__anchor"
                                    >
                                      <EuiButtonEmpty
                                        flush="right"
                                        iconSide="right"
                                        iconType="arrowDown"
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <button
                                          className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushRight"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiButtonContent
                                            className="euiButtonEmpty__content"
                                            iconSide="right"
                                            iconSize="s"
                                            iconType="arrowDown"
                                            textProps={
                                              Object {
                                                "className": "euiButtonEmpty__text",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="s"
                                                type="arrowDown"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--small euiIcon--inherit euiIcon-isLoading euiButtonContent__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                <EuiI18n
                                                  default="Sorting"
                                                  token="euiTableSortMobile.sorting"
                                                >
                                                  Sorting
                                                </EuiI18n>
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </button>
                                      </EuiButtonEmpty>
                                    </div>
                                  </div>
                                </EuiPopover>
                              </div>
                            </EuiTableSortMobile>
                          </div>
                        </EuiFlexItem>
                      </div>
                    </EuiFlexGroup>
                  </div>
                </EuiTableHeaderMobile>
                <EuiTable
                  id="generated-id"
                  responsive={true}
                  tableLayout="fixed"
                >
                  <table
                    className="euiTable euiTable--responsive"
                    id="generated-id"
                    tabIndex={-1}
                  >
                    <EuiScreenReaderOnly>
                      <caption
                        className="euiScreenReaderOnly euiTableCaption"
                      >
                        <EuiDelayRender
                          delay={500}
                        />
                      </caption>
                    </EuiScreenReaderOnly>
                    <EuiTableHeader>
                      <thead>
                        <tr>
                          <EuiTableHeaderCellCheckbox
                            key="_selection_column_h"
                          >
                            <th
                              className="euiTableHeaderCellCheckbox"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <div
                                className="euiTableCellContent"
                              >
                                <EuiI18n
                                  default="Select all rows"
                                  token="euiBasicTable.selectAllRows"
                                >
                                  <EuiCheckbox
                                    aria-label="Select all rows"
                                    checked={false}
                                    compressed={false}
                                    data-test-subj="checkboxSelectAll"
                                    disabled={true}
                                    id="_selection_column-checkbox_generated-id"
                                    indeterminate={false}
                                    label={null}
                                    onChange={[Function]}
                                    type="inList"
                                  >
                                    <div
                                      className="euiCheckbox euiCheckbox--inList euiCheckbox--noLabel"
                                    >
                                      <input
                                        aria-label="Select all rows"
                                        checked={false}
                                        className="euiCheckbox__input"
                                        data-test-subj="checkboxSelectAll"
                                        disabled={true}
                                        id="_selection_column-checkbox_generated-id"
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                      <div
                                        className="euiCheckbox__square"
                                      />
                                    </div>
                                  </EuiCheckbox>
                                </EuiI18n>
                              </div>
                            </th>
                          </EuiTableHeaderCellCheckbox>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_start_time_0"
                            isSortAscending={false}
                            isSorted={true}
                            key="_data_h_start_time_0"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="descending"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_start_time_0"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton euiTableHeaderButton-isSorted"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSortAscending={false}
                                  isSorted={true}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Alert start time",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Alert start time"
                                        >
                                          Alert start time
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                    <EuiIcon
                                      className="euiTableSortIcon"
                                      size="m"
                                      type="sortDown"
                                    >
                                      <EuiIconEmpty
                                        aria-hidden={true}
                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                        focusable="false"
                                        role="img"
                                        style={null}
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiTableSortIcon"
                                          focusable="false"
                                          height={16}
                                          role="img"
                                          style={null}
                                          viewBox="0 0 16 16"
                                          width={16}
                                          xmlns="http://www.w3.org/2000/svg"
                                        />
                                      </EuiIconEmpty>
                                    </EuiIcon>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_end_time_1"
                            isSorted={false}
                            key="_data_h_end_time_1"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_end_time_1"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Alert end time",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Alert end time"
                                        >
                                          Alert end time
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_trigger_name_2"
                            isSorted={false}
                            key="_data_h_trigger_name_2"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_trigger_name_2"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Trigger name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Trigger name"
                                        >
                                          Trigger name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_severity_3"
                            key="_data_h_severity_3"
                          >
                            <th
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_severity_3"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "Severity",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="Severity"
                                      >
                                        Severity
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_state_4"
                            key="_data_h_state_4"
                          >
                            <th
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_state_4"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <CellContents
                                className="euiTableCellContent"
                                showSortMsg={false}
                              >
                                <span
                                  className="euiTableCellContent"
                                >
                                  <EuiInnerText>
                                    <EuiI18n
                                      default="{innerText}; {description}"
                                      token="euiTableHeaderCell.titleTextWithDesc"
                                      values={
                                        Object {
                                          "description": undefined,
                                          "innerText": "State",
                                        }
                                      }
                                    >
                                      <span
                                        className="euiTableCellContent__text"
                                        title="State"
                                      >
                                        State
                                      </span>
                                    </EuiI18n>
                                  </EuiInnerText>
                                </span>
                              </CellContents>
                            </th>
                          </EuiTableHeaderCell>
                          <EuiTableHeaderCell
                            align="left"
                            data-test-subj="tableHeaderCell_acknowledged_time_5"
                            isSorted={false}
                            key="_data_h_acknowledged_time_5"
                            onSort={[Function]}
                          >
                            <th
                              aria-live="polite"
                              aria-sort="none"
                              className="euiTableHeaderCell"
                              data-test-subj="tableHeaderCell_acknowledged_time_5"
                              role="columnheader"
                              scope="col"
                              style={
                                Object {
                                  "width": undefined,
                                }
                              }
                            >
                              <button
                                className="euiTableHeaderButton"
                                data-test-subj="tableHeaderSortButton"
                                onClick={[Function]}
                                type="button"
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  isSorted={false}
                                  showSortMsg={true}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Time acknowledged",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Time acknowledged"
                                        >
                                          Time acknowledged
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </button>
                            </th>
                          </EuiTableHeaderCell>
                        </tr>
                      </thead>
                    </EuiTableHeader>
                    <EuiTableBody>
                      <tbody>
                        <EuiTableRow>
                          <tr
                            className="euiTableRow"
                          >
                            <EuiTableRowCell
                              align="center"
                              colSpan={7}
                              isMobileFullWidth={true}
                            >
                              <td
                                className="euiTableRowCell euiTableRowCell--isMobileFullWidth"
                                colSpan={7}
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <div
                                  className="euiTableCellContent euiTableCellContent--alignCenter"
                                >
                                  <span
                                    className="euiTableCellContent__text"
                                  >
                                    <DashboardEmptyPrompt>
                                      <EuiEmptyPrompt
                                        actions={
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            Create monitor
                                          </EuiButton>
                                        }
                                        body={
                                          <EuiText>
                                            <p>
                                              There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                            </p>
                                          </EuiText>
                                        }
                                        style={
                                          Object {
                                            "maxWidth": "45em",
                                          }
                                        }
                                      >
                                        <div
                                          className="euiEmptyPrompt"
                                          style={
                                            Object {
                                              "maxWidth": "45em",
                                            }
                                          }
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                          >
                                            <span
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              <EuiText>
                                                <div
                                                  className="euiText euiText--medium"
                                                >
                                                  <EuiText>
                                                    <div
                                                      className="euiText euiText--medium"
                                                    >
                                                      <p>
                                                        There are no existing alerts. Create a monitor to add triggers and actions. Once an alarm is triggered, the state will show in this table.
                                                      </p>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                              </EuiText>
                                            </span>
                                          </EuiTextColor>
                                          <EuiSpacer
                                            size="l"
                                          >
                                            <div
                                              className="euiSpacer euiSpacer--l"
                                            />
                                          </EuiSpacer>
                                          <EuiButton
                                            fill={true}
                                            href="alerting#/create-monitor"
                                          >
                                            <EuiButtonDisplay
                                              baseClassName="euiButton"
                                              element="a"
                                              fill={true}
                                              href="alerting#/create-monitor"
                                              isDisabled={false}
                                              rel="noreferrer"
                                            >
                                              <a
                                                className="euiButton euiButton--primary euiButton--fill"
                                                disabled={false}
                                                href="alerting#/create-monitor"
                                                rel="noreferrer"
                                                style={
                                                  Object {
                                                    "minWidth": undefined,
                                                  }
                                                }
                                              >
                                                <EuiButtonContent
                                                  className="euiButton__content"
                                                  iconSide="left"
                                                  textProps={
                                                    Object {
                                                      "className": "euiButton__text",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="euiButtonContent euiButton__content"
                                                  >
                                                    <span
                                                      className="euiButton__text"
                                                    >
                                                      Create monitor
                                                    </span>
                                                  </span>
                                                </EuiButtonContent>
                                              </a>
                                            </EuiButtonDisplay>
                                          </EuiButton>
                                        </div>
                                      </EuiEmptyPrompt>
                                    </DashboardEmptyPrompt>
                                  </span>
                                </div>
                              </td>
                            </EuiTableRowCell>
                          </tr>
                        </EuiTableRow>
                      </tbody>
                    </EuiTableBody>
                  </table>
                </EuiTable>
              </div>
            </div>
          </EuiBasicTable>
        </div>
      </div>
    </EuiPanel>
  </ContentPanel>
</Dashboard>
`;
