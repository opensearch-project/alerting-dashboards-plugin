name: Release workflow
# This workflow is triggered on creating tags to main or an opendistro release branch
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Alerting OpenSearch Dashboards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Alerting OpenSearch Dashboards plugin
        uses: actions/checkout@v2
        with:
          path: alerting-dashboards-plugin
      - name: Get OpenSearch Dashboards version
        id: opensearch_dashboards_version
        run: |
          echo "::set-output name=opensearch_dashboards_version::$(node -p "(require('./alerting-dashboards-plugin/opensearch_dashboards.json').opensearchDashboardsVersion).match(/[.0-9]+/)[0]")"
      - name: Checkout OpenSearch Dashboards
        uses: actions/checkout@v2
        with:
          repository: opensearch-project/OpenSearch-Dashboards
          ref: ${{ steps.opensearch_dashboards_version.outputs.opensearch_dashboards_version }}
          token: ${{ secrets.GITHUB_OPENSEARCH_DASHBOARDS_OSS }}
          path: opensearchDashboards
      - name: Get node and yarn versions
        id: versions
        run: |
          echo "::set-output name=node_version::$(node -p "(require('./OpenSearch-Dashboards/package.json').engines.node).match(/[.0-9]+/)[0]")"
          echo "::set-output name=yarn_version::$(node -p "(require('./OpenSearch-Dashboards/package.json').engines.yarn).match(/[.0-9]+/)[0]")"
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.versions.outputs.node_version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Install correct yarn version for OpenSearch Dashboards
        run: |
          npm uninstall -g yarn
          echo "Installing yarn ${{ steps.versions_step.outputs.yarn_version }}"
          npm i -g yarn@${{ steps.versions.outputs.yarn_version }}
      - name: Bootstrap plugin/opensearch-dashboards
        run: |
          mkdir -p Opensearch-Dashboards/plugins
          mv alerting-dashboards-plugin Opensearch-Dashboards/plugins
          cd Opensearch-Dashboards/plugins/alerting-dashboards-plugin
          yarn osd bootstrap
      - name: Build plugin
        id: build_zip
        run: |
          cd Opensearch-Dashboards/plugins/alerting-dashboards-plugin
          yarn build
          zip_path=`ls $(pwd)/build/*.zip`
          echo "::set-output name=zip_path::$zip_path"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Upload Artifacts to S3
        run: |
          zip=${{ steps.build_zip.outputs.zip_path }}
          # inject build number before the suffix
          zip_outfile=`basename ${zip%.zip}-build-${GITHUB_RUN_NUMBER}.zip`

          # TODO: Change s3 location
          s3_prefix="s3://staging.artifacts.opendistroforelasticsearch.amazon.com/snapshots/opensearch-dashboards-plugins/alerting/"

          echo "Copying ${zip} to ${s3_prefix}${zip_outfile}"
          aws s3 cp --quiet $zip ${s3_prefix}${zip_outfile}
      - name: Create Github Draft Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: opensearch_alerting_dashboards.zip
          asset_path: ${{ steps.build_zip.outputs.zip_path }}
          asset_content_type: application/zip
      - name: Upload Workflow Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: alerting-plugin
          path: ${{ steps.build_zip.outputs.zip_path }}
