name: Unit tests workflow
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
env:
  OPENSEARCH_DASHBOARDS_VERSION: '2.x'
jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch-dashboards

  tests-linux:
    needs: Get-CI-Image-Tag
    name: Run unit tests
    runs-on: ubuntu-latest
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: --user root

    steps:
      - name: Checkout OpenSearch Dashboards
        uses: actions/checkout@v2
        with:
          repository: opensearch-project/OpenSearch-Dashboards
          ref: ${{ env.OPENSEARCH_DASHBOARDS_VERSION }}
          path: OpenSearch-Dashboards
      - name: Checkout Alerting OpenSearch Dashboards plugin
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards/plugins/alerting-dashboards-plugin
      - name: Run non-window tests
        run: |
          chown -R 1000:1000 `pwd`
          cd ./OpenSearch-Dashboards/
          su `id -un 1000` -c "source $NVM_DIR/nvm.sh && nvm use && node -v && yarn -v &&
                               cd ./plugins/alerting-dashboards-plugin &&
                               whoami && yarn osd bootstrap && yarn build && yarn run test:jest --coverage"
      - name: Uploads coverage
        uses: codecov/codecov-action@v1

  tests-macos-windows:
    name: Run unit tests
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # Enable longer filenames for windows
      - name: Enable longer filenames
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true
      - name: Checkout OpenSearch Dashboards
        uses: actions/checkout@v2
        with:
          repository: opensearch-project/OpenSearch-Dashboards
          ref: ${{ env.OPENSEARCH_DASHBOARDS_VERSION }}
          path: OpenSearch-Dashboards
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: './OpenSearch-Dashboards/.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Install Yarn
        # Need to use bash to avoid having a windows/linux specific step
        shell: bash
        run: |
          YARN_VERSION=$(node -p "require('./OpenSearch-Dashboards/package.json').engines.yarn")
          echo "Installing yarn@$YARN_VERSION"
          npm i -g yarn@$YARN_VERSION
      - run: node -v
      - run: yarn -v
      - name: Checkout Alerting OpenSearch Dashboards plugin
        uses: actions/checkout@v2
        with:
          path: OpenSearch-Dashboards/plugins/alerting-dashboards-plugin
      - name: Bootstrap plugin/opensearch-dashboards
        run: |
          cd OpenSearch-Dashboards/plugins/alerting-dashboards-plugin
          yarn osd bootstrap
      - name: Run window tests
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd OpenSearch-Dashboards/plugins/alerting-dashboards-plugin
          yarn run test:jest:windows --coverage
      - name: Run non-window tests
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd OpenSearch-Dashboards/plugins/alerting-dashboards-plugin
          yarn run test:jest --coverage
